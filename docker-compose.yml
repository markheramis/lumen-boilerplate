# For more information: https://laravel.com/docs/sail
version: "3.1"
services:
  laravel.test:
    container_name: "lumen_app"
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        WWWGROUP: "${WWWGROUP:-1000}"
    image: sail-8.0/app
    ports:
      - "${APP_PORT:-80}:80"
    environment:
      WWWUSER: "${WWWUSER:-1000}"
      LARAVEL_SAIL: 1
    volumes:
      - ".:/var/www/html"
    networks:
      - lumen_network
    healthcheck:
      test: curl --fail -s http://localhost:80/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    depends_on:
      - mysql
      # - pgsql
      - redis
      # - selenium
  # selenium:
  #     container_name: 'selenium'
  #     image: 'selenium/standalone-chrome'
  #     volumes:
  #         - '/dev/shm:/dev/shm'
  #     networks:
  #         - lumen_network
  mysql:
    container_name: "lumen_mysql"
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    restart: always
    ports:
      - "${FORWARD_MYSQL_PORT:-3306}:3306"
    volumes:
      - "lumen_volume:/var/lib/mysql"
    networks:
      - lumen_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 45s
      interval: 10s
      retries: 10

  phpmyadmin:
    container_name: "lumen_phpmyadmin"
    image: phpmyadmin
    restart: always
    ports:
      - "${FORWARD_PHPMYADMIN_PORT:-8080}:80"
    env_file:
      - .env
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: "${DB_USERNAME}"
      PMA_PASSWORD: "${DB_PASSWORD}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    depends_on:
      - mysql
    networks:
      - lumen_network
  #    pgsql:
  #        container_name: 'postgresql'
  #        image: postgres:13
  #        ports:
  #            - '${FORWARD_DB_PORT:-5432}:5432'
  #        environment:
  #            PGPASSWORD: '${DB_PASSWORD:-secret}'
  #            POSTGRES_DB: '${DB_DATABASE}'
  #            POSTGRES_USER: '${DB_USERNAME}'
  #            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
  #        volumes:
  #            - 'sailpostgresql:/var/lib/postgresql/data'
  #        networks:
  #            - lumen_network
  #        healthcheck:
  #          test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
  #          timeout: 45s
  #          interval: 10s
  #          retries: 10
  redis:
    container_name: "lumen_redis"
    image: redis:alpine
    restart: always
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "lumen_redis_volume:/data"
    networks:
      - lumen_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 45s
      interval: 10s
      retries: 10
  # memcached:
  #     container_name: 'memcached'
  #     image: 'memcached:alpine'
  #     ports:
  #         - '11211:11211'
  #     networks:
  #         - sail
  mailhog:
    container_name: "lumen_mailhog"
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - "${FORWARD_MAILHOG_PORT:-1025}:1025"
      - "${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025"
    networks:
      - lumen_network
networks:
  lumen_network:
    driver: bridge
volumes:
  lumen_volume:
    driver: local
  #    sailpostgresql:
  #        driver: local
  lumen_redis_volume:
    driver: local
